This is METAFONT, Version 2.71828182 (preloaded base=mf 2022.11.14)  21 NOV 2022 09:45
**\mode:=ljfour; mag:=600/600; nonstopmode; input ecxc0
(/home/noob/.texlive/texmf-var/fonts/source/jknappen/ec/ecxc0.mf
(/usr/share/texmf-dist/fonts/source/jknappen/ec/exbase.mf)
(/usr/share/texmf-dist/fonts/source/jknappen/ec/ecxc.mf
(/usr/share/texmf-dist/fonts/source/jknappen/ec/excsc.mf
 Ok (/usr/share/texmf-dist/fonts/source/jknappen/ec/exaccess.mf
 Ok) (/usr/share/texmf-dist/fonts/source/jknappen/ec/expseudo.mf
 Ok) (/usr/share/texmf-dist/fonts/source/jknappen/ec/exruwest.mf
 Ok
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ....serifs:0.75u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
This error message was generated by an `errmessage'
command, so I can't give any explicit help.
Pretend that you're Miss Marple: Examine all clues,
and deduce the truth by inspired guesses.

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9285)> ...5u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
(That was another `errmessage'.)

[192]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...nospace:hpos_corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...nospace:hpos_corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11991)> ..._corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11991)> ..._corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

[193] [194]
>> xpart delta-11
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-31.59998
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-35
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta-14.40002
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[195] [196]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.254 uppercase_circle(x2,y2,12,13,14,15)
                                         ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.254 uppercase_circle(x2,y2,12,13,14,15)
                                         ;
(That was another `errmessage'.)

[197]
>> 6.5
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.284 ...iag_ratio(1,.5left_stem,y12-y11,x12-x11l)
                                                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -41.25 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.284 ...iag_ratio(1,.5left_stem,y12-y11,x12-x11l)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -3.4544
! Division by zero.
<to be read again> 
                   endgroup
l.284 ...iag_ratio(1,.5left_stem,y12-y11,x12-x11l)
                                                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.285 penpos11(alpha*left_stem,0)
                                 ; penpos12(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.285 ...left_stem,0); penpos12(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-1.9243,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -1.9243
>> (-from_x-1.9243,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x-1.9243,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x-46.83159,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -46.83159
>> (-to_x-46.83159,0.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-46.83159,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-43.37717,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -43.37717
>> (-from_x-43.37717,0.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x-43.37717,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x+1.53012,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 1.53012
>> (-to_x+1.53012,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x+1.53012,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 WNW NNW NNE NNW WNW 2 WSW SSW SSE ESE 4 ENE NNE NNW NNE ENE 6 ESE SSE SSW W
SW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.287  --diag_end(11r,12r,1,1,12l,11l)--cycle;
                                               % diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by 3).
<to be read again> 
                   ;
l.288 y10=h-slab; z10=whatever[z11,z12];
                                        
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x10
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.289 fill z10--
                (x1,y10)--(x1,h)--z12--cycle;  % link
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
l.292 if hefty: y14r=.4h; else: y14=y0;
                                        fi
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x13r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(l)> path_(SUFFIX0):=z13(SUFFIX0)--
                                       z14(SUFFIX0); ENDFOR
penstroke->...ffixes.e=l,r:path_.e:=(TEXT0);endfor
                                                  .if.cycle.path_.l:cyclestr...
<to be read again> 
                   ;
l.293 penstroke z13e--z14e;
                            % bar line
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x13r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(r)> path_(SUFFIX0):=z13(SUFFIX0)--
                                       z14(SUFFIX0); ENDFOR
penstroke->...ffixes.e=l,r:path_.e:=(TEXT0);endfor
                                                  .if.cycle.path_.l:cyclestr...
<to be read again> 
                   ;
l.293 penstroke z13e--z14e;
                            % bar line
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by -1).
<to be read again> 
                   ;
l.295  prime_points_inside(11,12)
                                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x11'r+24.3687
! Unknown relation will be considered false.
<to be read again> 
                   :
l.296 ... x11'r+cap_jut+.5u+1<=lft x2l-.75cap_jut:
                                                   inner_jut=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11073
>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.i2,-2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x11'r,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10632
>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.i2-20.92303
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10913
>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.i2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r+20.92352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.i2-0.25x11'l-10.29318
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.i2+x11'r+0.67432
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x11'r+0.67432
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x11'r+0.67432
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10480
>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.57143x11'r-14.14287
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.j2,-2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x11'r,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9143
>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.j2-20.92303
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9238
>> (-0.5x11'l-0.5x11'r-20.92352,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.j2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r+20.92352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.j2-0.2x11'l-0.07143x11'r-12.46217
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.j2+0.42857x11'r-13.64287
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.57143x11'r-14.14287
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r-13.64287
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r-13.64287
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x11'r+0.67432
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.i1,dish_out)..
                                      (x11',dish_in){right}..(x.j1,dish_out)...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...ev_((x.i1,dish_out)..(x11',dish_in){
                                                  right}..(x.j1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r-13.64287
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.j1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+10.60715
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.07143x11'r-21.23167
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+10.60715
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+10.60715
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r-12.39236
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r-12.39236
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[198]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.308  pos3(cap_curve,180)
                          ; pos4(cap_band,270); pos5(hair,360);
(That was another `errmessage'.)

>> -x2l'-29.7944
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-29.7944)> if(EXPR0)<u_:
                             u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.313 ...whatever[z2r,z1l]; x2l:=min(x2l',x2l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4l'-29.7944
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-29.7944)> if(EXPR0)<u_:
                             u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.314 ...whatever[z4r,z5l]; x4l:=min(x4l',x4l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-3.72484
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x4l'-3.72484
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...2)l}...{z(SUFFIX3)l-corner}
                                                  z(SUFFIX3)l.endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[199]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...t(0,0.5ic#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10124)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
(That was another `errmessage'.)

[200]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ap_jut,d,1/3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ap_jut,d,1/3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10581)> ...,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10581)> ...,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
(That was another `errmessage'.)

[201] [202] [203]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...it(0,0.5ic#);hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE8222)> ...);hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
(That was another `errmessage'.)

[204]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ce:hpos_corr=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ce:hpos_corr=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12148)> ...=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12148)> ...=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
(That was another `errmessage'.)

[205] [206] [207] [208]
> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
l.623  else: serif(5,6,a,1/3,-cap_jut);
                                        fi  % upper left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

>> xpart delta-10
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-31.59998
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-35
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta-13.40002
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[209]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,ic#-0.5u#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11557)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
(That was another `errmessage'.)

[210]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...s(1,2,3,4);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...s(1,2,3,4);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12758)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12758)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
(That was another `errmessage'.)

[211] [212]
>> xpart delta-13
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-33.59998
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-37
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta-16.40002
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[213] [214]
> 0 ENE NNE NNW WNW NNW NNE ENE 2 (NNE NNW) WNW NNW NNE ENE NNE NNW WNW 3 (WSW)
 SSW 4 (SSE) ESE SSE SSW WSW WNW 5 NNW 7 NNE ENE 8 ESE SSE SSW WSW 9 SSW 0 (SSE
 ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.766  ...{left}z13l--cycle;
                              % right half of bowl
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[215] [216]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...#-0.5u#,0));hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12791)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
(That was another `errmessage'.)

[217]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...jut,d,1/2,cap_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...jut,d,1/2,cap_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11374)> ...p_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11374)> ...p_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
(That was another `errmessage'.)

[218] [219] [220]
>> 99.54956
! Division by zero.
<to be read again> 
                   ;
<for(1)> ...ght;dy=y1-y2;alpha=((x2l-x1l)++dy)/dy;
                                                  penpos1(alpha*left_stem,0)...
l.916 repeat_once
                 ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(1)> ...{down}z0+0.5left--cycle;else:fill.z0--
                                                  diag_end(0,4l,1,1,4r,3r)--...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9751
>> (-x0-592.77211,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 1.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 1.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-194.54956,1.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -194.54956
>> (-to_x-194.54956,1.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-194.54956,1.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+591.27211
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-592.77211
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 1.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...4r,3r)--z5r--diag_end(5r,6r,1,1,6l,5l)
                                                  --z5l--diag_end(2l,1l,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 1.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(1)> ...4r,3r)--z5r--diag_end(5r,6r,1,1,6l,5l)
                                                  --z5l--diag_end(2l,1l,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 1.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE10455
>> (x0-397.77211,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 1.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-0.45044,1.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -0.45044
>> (-from_x-0.45044,1.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x-0.45044,1.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+397.77211,1.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 397.77211
>> (-x0+397.77211,1.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+397.77211,1.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-397.77211
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 3).
<to be read again> 
                   ;
<for(1)> ...ckup.tiny.nib;prime_points_inside(1,2)
                                                  ;prime_points_inside(4,3);...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 3).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(1)> ...s_inside(1,2);prime_points_inside(4,3)
                                                  ;prime_points_inside(6,5);...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
<for(1)> ...s_inside(4,3);prime_points_inside(6,5)
                                                  ;if.rt.x1'r+cap_jut+0.5u+1...
l.916 repeat_once
                 ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 3).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(1)> ...s_inside(4,3);prime_points_inside(6,5)
                                                  ;if.rt.x1'r+cap_jut+0.5u+1...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r-5.36777
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(1)> ...x1'r+cap_jut+0.5u+1<=lft.x4'l-cap_jut:
                                                  inner_jut=cap_jut;else:rt....
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12511
>> (-0.5x1'l-0.5x1'r+99.11128,1.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r-99.11128,-1.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-99.11128,-1.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-1.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12506
>> (0.5x1'l+0.5x1'r-99.11128,-1.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-99.11128,-1.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-99.11128,-1.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+99.11177
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12149
>> (0.5x1'l+0.5x1'r-99.11128,-1.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -1.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-99.11128
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.33334x1'l+0.5x1'r-65.70796
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'r+2.20038
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+2.20038
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+2.20038
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12952
>> (-0.5x1'l-0.5x1'r+99.11128,1.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r+1.75005
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-99.11128,-1.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-99.11128,-1.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-1.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE8294
>> (0.5x1'l+0.5x1'r-99.11128,-1.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-99.11128,-1.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-99.11128,-1.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+99.11177
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11270
>> (0.5x1'l+0.5x1'r-99.11128,-1.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -1.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-99.11128
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r-48.74313
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r+3.25005
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r+1.75005
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r+3.25005
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r+3.25005
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10107
>> (-0.5x4'l-0.5x4'r-295.11104,1.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r-1.75005
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x4'l+0.5x4'r+295.11104,-1.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+295.11104,-1.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-1.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9617
>> (0.5x4'l+0.5x4'r+295.11104,-1.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+295.11104,-1.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+295.11104,-1.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-295.11055
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9928
>> (0.5x4'l+0.5x4'r+295.11104,-1.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -1.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+295.11104
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2+0.05x4'l+0.5x4'r+0.15001x1'r+117.9676
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r-0.25005
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r-1.75005
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r-0.25005
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r-0.25005
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9683
>> (-0.5x4'l-0.5x4'r-295.11104,1.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x4'l+0.5x4'r+295.11104,-1.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,10)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+295.11104,-1.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'l,-1.5)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10595
>> (0.5x4'l+0.5x4'r+295.11104,-1.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+295.11104,-1.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+295.11104,-1.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-295.11153
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10509
>> (0.5x4'l+0.5x4'r+295.11104,-1.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -1.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+295.11104
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2+0.5x4'l+0.25x4'r+147.00542
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'l-2.20038
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-2.20038
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-2.20038
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...3,cap_jut,f,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...3,cap_jut,f,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
(That was another `errmessage'.)

>> 23.65782
! Division by zero.
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...;alpha=((x2l-x1l)++dy)/dy;
                                                  penpos1(alpha*left_stem,0)...
l.916 repeat_once
                 ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(%CAPSULE12836)> ...left--cycle;else:fill.z0--
                                                  diag_end(0,4l,1,1,4r,3r)--...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9615
>> (-x0-87.5189,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
<for(%CAPSULE12836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(%CAPSULE12836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(%CAPSULE12836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-45.65782,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE12836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -45.65782
>> (-to_x-45.65782,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE12836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-45.65782,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE12836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+87.0189
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
<for(%CAPSULE12836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-87.5189
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
<for(%CAPSULE12836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(%CAPSULE12836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(%CAPSULE12836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(%CAPSULE12836)> ...-diag_end(5r,6r,1,1,6l,5l)
                                                  --z5l--diag_end(2l,1l,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(%CAPSULE12836)> ...-diag_end(5r,6r,1,1,6l,5l)
                                                  --z5l--diag_end(2l,1l,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE11166
>> (x0-41.5189,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-0.34218,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -0.34218
>> (-from_x-0.34218,0.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x-0.34218,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+41.5189,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 41.5189
>> (-x0+41.5189,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+41.5189,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-41.5189
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(%CAPSULE12836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...b;prime_points_inside(1,2)
                                                  ;prime_points_inside(4,3);...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(%CAPSULE12836)> ...);prime_points_inside(4,3)
                                                  ;prime_points_inside(6,5);...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
<for(%CAPSULE12836)> ...);prime_points_inside(6,5)
                                                  ;if.rt.x1'r+cap_jut+0.5u+1...
l.916 repeat_once
                 ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(%CAPSULE12836)> ...);prime_points_inside(6,5)
                                                  ;if.rt.x1'r+cap_jut+0.5u+1...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r-0.20985
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(%CAPSULE12836)> ...+0.5u+1<=lft.x4'l-cap_jut:
                                                  inner_jut=cap_jut;else:rt....
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10904
>> (-0.5x1'l-0.5x1'r-3.06946,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE8047
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2-3.06897
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12499
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r+3.06946
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.33334x1'l+0.5x1'r+2.1572
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE8222
>> (-0.5x1'l-0.5x1'r-3.06946,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-0.11539
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9691
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2-3.06897
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9734
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r+3.06946
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r+1.63087
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-0.11539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.a1,dish_out)..
                                      (x1',dish_in){right}..(x.b1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.a1,dish_out)..(x1',dish_in){
                                                  right}..(x.b1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.b1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10251
>> (-0.5x4'l-0.5x4'r-43.1611,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+0.11539
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9932
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-43.16061
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9645
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+43.1611
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2+0.05x4'l+0.5x4'r+0.15001x1'r+17.44879
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+0.11539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11576
>> (-0.5x4'l-0.5x4'r-43.1611,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,2)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'l,-0.5)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12381
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-43.16159
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12188
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+43.1611
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2+0.5x4'l+0.25x4'r+21.41425
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.c1,dish_out)..
                                      (x4',dish_in){right}..(x.d1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.c1,dish_out)..(x4',dish_in){
                                                  right}..(x.d1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.d1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
<for(%CAPSULE12836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12836)> ...1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12836)> ...1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
(That was another `errmessage'.)

[221] [222]
> 0 WSW 1 (SSW SSE) ESE ENE NNE NNW WNW 2 (NNW) NNE 3 (ENE) ESE SSE SSW WSW WNW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.970 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[223]) (/usr/share/texmf-dist/fonts/source/jknappen/ec/exrueast.mf
 Ok
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_breve->...os[(EXPR5)](mid_thickness,-90)
                                                  ;bot.y[(EXPR5)]r=cap_heigh...
l.87 uppercase_breve(x2,0,12,13,14)
                                   ;
(That was another `errmessage'.)

[128]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );y_right':=ypart(bot(dire...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );if.abs(x_down'-x_down,y_...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

ERROR: `ogonek' iteration hasn't converged! Final values:
x_down=-206.51538 (should be -200)
y_right=-0.00024 (should be -3)
! Probably, you have to change somehow the boundary values.
<to be read again> 
                   ;
put_ogonek->...hange somehow the boundary values";
                                                  fi.z[ii]l=z_a;z[ii]'l=lo.z...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

[129]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...;pos2(cap_band,90);pos3(cap_curve,180)
                                                  ;pos4(cap_band,270);pos5(h...
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...e;penlabels(1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...e;penlabels(1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11324)> ...nd,90);pos3(cap_curve,180)
                                                  ;pos4(cap_band,270);pos5(h...
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

>> -x2l'-29.7944
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-29.7944)> if(EXPR0)<u_:
                             u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
<for(%CAPSULE11324)> ...l];x2l:=min(x2l',x2l+0.5u)
                                                  ;(x4l',y4l)=whatever[z4r,z...
l.153  repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4l'-29.7944
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-29.7944)> if(EXPR0)<u_:
                             u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
<for(%CAPSULE11324)> ...l];x4l:=min(x4l',x4l+0.5u)
                                                  ;filldraw.stroke.z1e{x2-x1...
l.153  repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE11324)> ...lled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE11324)> ...lled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-3.72484
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE11324)> ...lled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE11324)> ...lled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x4l'-3.72484
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE11324)> ...lled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE11324)> ...lled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...2)l}...{z(SUFFIX3)l-corner}
                                                  z(SUFFIX3)l.endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE11324)> ...lled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE11324)> ...lled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11324)> ...1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11324)> ...1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

[130]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.176  pos3(cap_curve,180)
                          ; pos4(cap_band,270); pos5(hair,360);
Maybe Jackowski knows how to change them...

>> -x2l'-29.7944
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-29.7944)> if(EXPR0)<u_:
                             u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.181 ...whatever[z2r,z1l]; x2l:=min(x2l',x2l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4l'-29.7944
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-29.7944)> if(EXPR0)<u_:
                             u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.182 ...whatever[z4r,z5l]; x4l:=min(x4l',x4l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-3.72484
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x4l'-3.72484
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...2)l}...{z(SUFFIX3)l-corner}
                                                  z(SUFFIX3)l.endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2l'+0.5
! Not implemented: floor(unknown numeric).
<to be read again> 
                   endgroup
<to be read again> 
                   -
good.x->begingroup.hround((EXPR2)+pen_lft)-
                                           pen_lft.endgroup
<to be read again> 
                   ;
uc_hachek_accent->...curve],90);x52=good.x(EXPR0);
                                                  x52-x51=x53-x52=good.x3acc...
l.203 uc_hachek_accent(x2l)
                           ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> x2l'+24.64326
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(l)> path_(SUFFIX0):=z51(SUFFIX0)--
                                       z52(SUFFIX0)--z53(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
uc_hachek_accent->...draw.stroke.z51e--z52e--z53e;
                                                  else:pickup.fine.nib;pos51...
l.203 uc_hachek_accent(x2l)
                           ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2l'+0.5
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(l)> ...SUFFIX0):=z51(SUFFIX0)--z52(SUFFIX0)--
                                                  z53(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
uc_hachek_accent->...draw.stroke.z51e--z52e--z53e;
                                                  else:pickup.fine.nib;pos51...
l.203 uc_hachek_accent(x2l)
                           ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2l'-23.64326
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ;
<for(l)> ...(SUFFIX0)--z52(SUFFIX0)--z53(SUFFIX0);
                                                   ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
uc_hachek_accent->...draw.stroke.z51e--z52e--z53e;
                                                  else:pickup.fine.nib;pos51...
l.203 uc_hachek_accent(x2l)
                           ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2l'+18.35674
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(r)> path_(SUFFIX0):=z51(SUFFIX0)--
                                       z52(SUFFIX0)--z53(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
uc_hachek_accent->...draw.stroke.z51e--z52e--z53e;
                                                  else:pickup.fine.nib;pos51...
l.203 uc_hachek_accent(x2l)
                           ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2l'+0.5
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(r)> ...SUFFIX0):=z51(SUFFIX0)--z52(SUFFIX0)--
                                                  z53(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
uc_hachek_accent->...draw.stroke.z51e--z52e--z53e;
                                                  else:pickup.fine.nib;pos51...
l.203 uc_hachek_accent(x2l)
                           ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2l'-17.35674
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ;
<for(r)> ...(SUFFIX0)--z52(SUFFIX0)--z53(SUFFIX0);
                                                   ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
uc_hachek_accent->...draw.stroke.z51e--z52e--z53e;
                                                  else:pickup.fine.nib;pos51...
l.203 uc_hachek_accent(x2l)
                           ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[131] [132] [133]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );y_right':=ypart(bot(dire...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );if.abs(x_down'-x_down,y_...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

ERROR: `ogonek' iteration hasn't converged! Final values:
x_down=-33.49149 (should be -27)
y_right=-0.00024 (should be -3)
! Probably, you have to change somehow the boundary values.
<to be read again> 
                   ;
put_ogonek->...hange somehow the boundary values";
                                                  fi.z[ii]l=z_a;z[ii]'l=lo.z...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

[134]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.302  else: pos5(cap_hair,0); pos8(cap_stem,0)
                                               ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (ENE ESE) SSE ESE ENE NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.304 ...8l{down}..{4(x9-x8),y9-y8}z9--z8r--cycle;
                                                   fi % spur
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.306  pos3(cap_curve,180)
                          ; pos4(cap_band,270);
Maybe Jackowski knows how to change them...

>> -x2l'-29.32515
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-29.32515)> if(EXPR0)<u_:
                              u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.310 ...whatever[z2r,z1l]; x2l:=min(x2l',x2l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.313 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-2.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.313 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-2.99576
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.313 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-2.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.313 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_breve->...os[(EXPR5)](mid_thickness,-90)
                                                  ;bot.y[(EXPR5)]r=cap_heigh...
l.341 uppercase_breve(x2,0,10,11,12)
                                    ;
Maybe Jackowski knows how to change them...

[135]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ound.max(2u,3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ound.max(2u,3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10274)> ...3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10274)> ...3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[136]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...

dtl_hachek->...t_diam,0.25accent_u,2/3comma_depth)
                                                  ;penlabels(51);
l.375 dtl_hachek(x4-pdot_diam)(y1+.5pdot_diam)
                                              ;
Maybe Jackowski knows how to change them...

[137] [138]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,4',5,6,7);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,4',5,6,7);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
<for(%CAPSULE10324)> ...serif(5,6,a,1/3,-cap_jut);
                                                  fi.dish_serif(2,1,b,1/2,ca...
l.429 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10324)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10324)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[139]
> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
l.460  else: serif(5,6,a,1/3,-cap_jut);
                                        fi  % upper left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[140]
> 0 SSW 1 (SSE ESE) ENE NNE 2 ENE 3 (ESE SSE) SSW WSW WNW 0 (WSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.478  bulb(3,4,5)
                  ;  % bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[141]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...accent;else:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...accent;else:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...u;put_accent;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...u;put_accent;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12446)> ...hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12446)> ...hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12446)> ...;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12446)> ...;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[142]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...--cycle;fi.hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...--cycle;fi.hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9851)> ...hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9851)> ...hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[143] [144]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...6,7,8,8',9,10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...6,7,8,8',9,10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (SSW SSE) ESE ENE NNE NNW WNW 2 (NNW) NNE 3 (ENE) ESE SSE SSW WSW WNW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE9587)> ...x1,10(y2-y1)}....{left}z2e;
                                                  filldraw.stroke.z7e{left}....
l.625 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9587)> ...10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9587)> ...10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[145]
> 0 WSW 1 (SSW SSE) ESE ENE NNE NNW WNW 2 (NNW) NNE 3 (ENE) ESE SSE SSW WSW WNW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.649 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[146]
> 0 WSW 1 (SSW SSE) ESE ENE NNE NNW WNW 2 (NNW) NNE 3 (ENE) ESE SSE SSW WSW WNW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.691 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[147] [148] [149]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...accent;else:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...accent;else:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...u;put_accent;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...u;put_accent;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE1391)> ...:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE1391)> ...:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE1391)> ...t;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE1391)> ...t;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[150]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.802 ...ght+if hefty: .5 fi accent_gap,8,9,10,11)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.802 ...ght+if hefty: .5 fi accent_gap,8,9,10,11)
                                                  ;
Maybe Jackowski knows how to change them...

[151]
>> 23.65782
! Division by zero.
<to be read again> 
                   ;
l.816 dy=y1-y2; alpha=((x2l-x1l)++dy)/dy;
                                         
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.825 else: fill z0--
                     diag_end(0,4l,1,1,4r,3r)--z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12100
>> (-x0-87.5189,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-45.65782,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -45.65782
>> (-to_x-45.65782,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-45.65782,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+87.0189
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-87.5189
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.826     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.826     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE12640
>> (x0-41.5189,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-0.34218,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -0.34218
>> (-from_x-0.34218,0.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x-0.34218,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+41.5189,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 41.5189
>> (-x0+41.5189,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+41.5189,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-41.5189
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
l.829  prime_points_inside(1,2)
                               ; prime_points_inside(4,3); prime_points_insi...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.829 ...nts_inside(1,2); prime_points_inside(4,3)
                                                  ; prime_points_inside(6,5);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
l.829 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.829 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r-0.20985
! Unknown relation will be considered false.
<to be read again> 
                   :
l.830  if rt x1'r+cap_jut+.5u+1<=lft x4'l-cap_jut:
                                                   inner_jut=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10239
>> (-0.5x1'l-0.5x1'r-3.06946,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9465
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2-3.06897
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10584
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r+3.06946
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.33334x1'l+0.5x1'r+2.1572
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9074
>> (-0.5x1'l-0.5x1'r-3.06946,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-0.11539
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12639
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2-3.06897
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9263
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r+3.06946
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r+1.63087
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-0.11539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.a1,dish_out)..
                                      (x1',dish_in){right}..(x.b1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.a1,dish_out)..(x1',dish_in){
                                                  right}..(x.b1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.b1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10096
>> (-0.5x4'l-0.5x4'r-43.1611,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+0.11539
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10046
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-43.16061
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11065
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+43.1611
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2+0.05x4'l+0.5x4'r+0.15001x1'r+17.44879
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+0.11539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12237
>> (-0.5x4'l-0.5x4'r-43.1611,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,2)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'l,-0.5)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12065
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-43.16159
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9421
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+43.1611
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2+0.5x4'l+0.25x4'r+21.41425
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.c1,dish_out)..
                                      (x4',dish_in){right}..(x.d1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.c1,dish_out)..(x4',dish_in){
                                                  right}..(x.d1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.d1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[152]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...2r-x3l);penpos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,4,5,6,7,8);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,4,5,6,7,8);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12522)> ...os1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12522)> ...os2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12522)> ...os3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12522)> ...os4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12522)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12522)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[153]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.883 penpos1(alpha*(z_stem-tiny),0)
                                    ; penpos2(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.883 ...-tiny),0); penpos2(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.884 penpos3(alpha*(z_stem-tiny),0)
                                    ; penpos4(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.884 ...-tiny),0); penpos4(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

[154]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...2r-x3l);penpos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11796)> ...os1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11796)> ...os2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11796)> ...os3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11796)> ...os4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[155]
> 0 SSW 1 (SSE ESE) ENE NNE 2 ENE 3 (ESE SSE) SSW WSW WNW 0 (WSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.951  pickup tiny.nib; bulb(13,14,15)
                                      ;  % bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[156] [157]) (/usr/share/texmf-dist/fonts/source/jknappen/ec/exrulett.mf
 Ok [65] [66]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.82  pos3(cap_curve,180)
                         ; pos4(cap_band,270); pos5(hair,360);
Maybe Jackowski knows how to change them...

>> -x2l'-29.7944
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-29.7944)> if(EXPR0)<u_:
                             u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.87 ...=whatever[z2r,z1l]; x2l:=min(x2l',x2l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4l'-29.7944
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-29.7944)> if(EXPR0)<u_:
                             u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.88 ...=whatever[z4r,z5l]; x4l:=min(x4l',x4l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-3.72484
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x4l'-3.72484
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+3.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...2)l}...{z(SUFFIX3)l-corner}
                                                  z(SUFFIX3)l.endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[67] [68] [69] [70]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.185  else: pos5(cap_hair,0); pos8(cap_stem,0)
                                               ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (ENE ESE) SSE ESE ENE NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.187 ...8l{down}..{4(x9-x8),y9-y8}z9--z8r--cycle;
                                                   fi % spur
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.189  pos3(cap_curve,180)
                          ; pos4(cap_band,270);
Maybe Jackowski knows how to change them...

>> -x2l'-29.32515
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-29.32515)> if(EXPR0)<u_:
                              u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.193 ...whatever[z2r,z1l]; x2l:=min(x2l',x2l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.196 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-2.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.196 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-2.99576
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.196 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-2.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.196 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[71] [72] [73]
> 0 SSW 1 (SSE ESE) ENE NNE 2 ENE 3 (ESE SSE) SSW WSW WNW 0 (WSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.285  pickup tiny.nib; bulb(3,4,5)
                                   ;  % bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[74]
! Square root of -3.00195 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.308 ...diag_ratio(1,.5(stem1-tiny),y3-y4,x3r-x4)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.309 penpos3(alpha1*(stem1-tiny),0)
                                    ; penpos4(whatever,-90);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.311 penpos6(alpha2*(stem2-tiny),0)
                                    ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 SSW SSE ESE 2 ENE 3 ESE (SSE SSW) WSW 4 5 (WNW NNW) NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.319 ...diag_end(4r,3'r,1,.5,3'l,4l)--z4l--cycle;
                                                    % upper diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.326 ...,e,2/3,1.2cap_jut,f,1/2,right_jut)(dark);
                                                   % upper diagonal serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.327 ...5,g,1/2,inner_jut,h,1/3,right_jut)(dark);
                                                  fi % lower diagonal serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[75] [76]
! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.375  fill z5l..{z6-z5}diag_in(5l,6l,1,6r)
                                           ..diag_out(7l,1,7r,8r){z8-z7}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.375  fill z5l..{z6-z5}diag_in(5l,6l,1,6r)
                                           ..diag_out(7l,1,7r,8r){z8-z7}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-29.50012,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.375  fill z5l..{z6-z5}diag_in(5l,6l,1,6r)
                                           ..diag_out(7l,1,7r,8r){z8-z7}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-29.50012,0.5)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.375  fill z5l..{z6-z5}diag_in(5l,6l,1,6r)
                                           ..diag_out(7l,1,7r,8r){z8-z7}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_out->...,y_)=whatever[z(SUFFIX4),z(SUFFIX5)];
                                                  z(SUFFIX4)-(EXPR3)*length(...
l.375 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-26.50012,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_out->...(EXPR3)*length(z(SUFFIX4)-(to_x,y_))*
                                                  unitvector(z(SUFFIX4)-z(SU...
l.375 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-to_x-26.50012,0.5)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   {
diag_out->...))*unitvector(z(SUFFIX4)-z(SUFFIX2)){
                                                  z(SUFFIX4)-z(SUFFIX2)}...{...
l.375 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.375 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_out->...,y_)=whatever[z(SUFFIX4),z(SUFFIX5)];
                                                  z(SUFFIX4)-(EXPR3)*length(...
l.376   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}..{z7-z8}z0{z5-z6}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-53.50049,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_out->...(EXPR3)*length(z(SUFFIX4)-(to_x,y_))*
                                                  unitvector(z(SUFFIX4)-z(SU...
l.376   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}..{z7-z8}z0{z5-z6}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-to_x-53.50049,0.5)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   {
diag_out->...))*unitvector(z(SUFFIX4)-z(SUFFIX2)){
                                                  z(SUFFIX4)-z(SUFFIX2)}...{...
l.376   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}..{z7-z8}z0{z5-z6}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.376   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}..{z7-z8}z0{z5-z6}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
l.376 ...--diag_out(8r,1,8l,7l){z7-z8}..{z7-z8}z0{
                                                  z5-z6}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.377   ..{z5-z6}diag_in(6r,5r,1,5l)
                                    --cycle; fi  % diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.377   ..{z5-z6}diag_in(6r,5r,1,5l)
                                    --cycle; fi  % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-4.49976,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.377   ..{z5-z6}diag_in(6r,5r,1,5l)
                                    --cycle; fi  % diagonals
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-4.49976,0.5)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.377   ..{z5-z6}diag_in(6r,5r,1,5l)
                                    --cycle; fi  % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

[77]
> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
l.413  else: serif(5,6,a,1/3,-cap_jut);
                                        fi  % upper left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[78] [79] [80] [81] [82]
> 0 WSW 1 (SSW SSE) ESE ENE NNE NNW WNW 2 (NNW) NNE 3 (ENE) ESE SSE SSW WSW WNW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.534 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[83] [84] [85] [86] [87]
>> 1.53888
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.676 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.36815 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.676 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -79.82436
! Division by zero.
<to be read again> 
                   endgroup
l.676 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> 1.53888
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.677 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.36815 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.677 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -76.5412
! Division by zero.
<to be read again> 
                   endgroup
l.677 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.678 penpos1(alpha1*stem1,0)
                             ; penpos2(alpha2*stem2,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.678 ...(alpha1*stem1,0); penpos2(alpha2*stem2,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.679 penpos3(alpha2*stem2,0)
                             ; penpos4(alpha1*stem1,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.679 ...(alpha2*stem2,0); penpos4(alpha1*stem1,0)
                                                  ;
Maybe Jackowski knows how to change them...

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-124.77454,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -124.77454
>> (-0.5from_x-62.38727,0.25)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-0.5from_x-62.38727,0.25)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x-1.93448,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -1.93448
>> (-to_x-1.93448,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-1.93448,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.5from_x-62.38727
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.688 else: fill diag_end(4r,1r,.5,1,1l,4l)
                                           
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+77.88991,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 77.88991
>> (-0.5from_x+38.94496,0.25)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-0.5from_x+38.94496,0.25)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x-44.95015,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -44.95015
>> (-to_x-44.95015,0.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-44.95015,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.5from_x+38.94495
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.689   --diag_end(1l,4l,.5,1,4r,1r)
                                    --cycle; % left diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 WNW NNW NNE ENE 2 ESE SSE SSW SSE ESE 3 (ENE) NNE 4 ENE NNE NNW WNW 6 WSW S
SW SSE SSW WSW 7 (WNW NNW) NNE 0 (NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.689   --diag_end(1l,4l,.5,1,4r,1r)--cycle;
                                             % left diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-1.04985,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -1.04985
>> (-0.5from_x-0.52493,0.25)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-0.5from_x-0.52493,0.25)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x-118.83752,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -118.83752
>> (-to_x-118.83752,0.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-118.83752,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.5from_x-0.52492
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.690  fill diag_end(2l,3l,.5,1,3r,2r)
                                      
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-42.2963,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -42.2963
>> (-0.5from_x-21.14815,0.25)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-0.5from_x-21.14815,0.25)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x+75.49138,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 75.49138
>> (-to_x+75.49138,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x+75.49138,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.5from_x-21.14815
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.691   --diag_end(3r,2r,.5,1,2l,3l)
                                    --cycle; fi  % right diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 WNW NNW NNE NNW WNW 2 WSW SSW SSE ESE 3 (ENE) NNE 4 ENE NNE NNW NNE ENE 6 E
SE SSE SSW WSW 7 (WNW NNW) NNE 0 (NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.691   --diag_end(3r,2r,.5,1,2l,3l)--cycle;
                                             fi  % right diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by -1).
<to be read again> 
                   ;
l.693  prime_points_inside(1,4)
                               ; prime_points_inside(2,3);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -1).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.693 ...nts_inside(1,4); prime_points_inside(2,3)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -1).
<to be read again> 
                   ;
l.694  prime_points_inside(3,2)
                               ; prime_points_inside(4,1);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -1).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.694 ...nts_inside(3,2); prime_points_inside(4,1)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x2'l+x1'r-0.20985
! Unknown relation will be considered false.
<to be read again> 
                   :
l.695 ...1'r+cap_jut+.5u+1<=lft x2'l-cap_jut-xjut:
                                                   inner_jut1=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4'l+x3'r-0.20985
! Unknown relation will be considered false.
<to be read again> 
                   :
l.697 ...3'r+cap_jut+.5u+1<=lft x4'l-cap_jut-xjut:
                                                   inner_jut2=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10469
>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,-2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10466
>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+16.47037
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12634
>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-16.46988
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2-0.33334x1'l-0.16667x1'r+11.09087
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9873
>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x2'l-0.5x1'r-0.11539
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,-2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10911
>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+16.47037
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10644
>> (-0.5x1'l-0.5x1'r+16.46988,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-16.46988
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.b2+0.16667x2'l-0.16667x1'l+5.61809
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x2'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l-0.5x1'r-0.11539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.a1,dish_out)..
                                      (x1',dish_in){right}..(x.b1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.a1,dish_out)..(x1',dish_in){
                                                  right}..(x.b1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.b1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9456
>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x3'r+0.11539
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,-2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9411
>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-63.35402
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11475
>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+63.3545
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.c2-0.33333x4'l+0.16667x4'r+0.16667x3'r-20.91272
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x3'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x3'r+0.11539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x3'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x3'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE8807
>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,-2)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'l,0.5)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9963
>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-63.355
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12217
>> (-0.5x4'l-0.5x4'r-63.3545,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+63.3545
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.d2-0.16667x4'l-0.33334x4'r-42.34753
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x3'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.c1,dish_out)..
                                      (x4',dish_in){right}..(x.d1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.c1,dish_out)..(x4',dish_in){
                                                  right}..(x.d1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.d1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9742
>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x2'l+0.5x1'r+0.11539
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.e2,-2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x2'r,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9536
>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.e2-59.9432
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10584
>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.e2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r+59.9437
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.e2-0.33333x2'l+0.16667x2'r+0.16667x1'r-19.7758
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.e2-0.5x2'l+x2'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+0.5x1'r+0.11539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+x2'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+x2'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE1390
>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.f2,-2)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x2'l,0.5)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10434
>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.f2-59.94418
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12814
>> (-0.5x2'l-0.5x2'r-59.9437,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.f2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r+59.9437
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.f2-0.25x2'r-30.13815
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.f2+x2'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+x2'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.e1,dish_out)..
                                      (x2',dish_in){right}..(x.f1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.e1,dish_out)..(x2',dish_in){
                                                  right}..(x.f1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.f1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9043
>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.g2,-2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x3'r,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10750
>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.g2+16.59804
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12584
>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.g2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r-16.59755
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.g2-0.25x3'l+8.46507
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.g2+x3'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x3'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x3'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9171
>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x3'r-0.11539
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.h2,-2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x3'r,0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12795
>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.h2+16.59804
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12289
>> (-0.5x3'l-0.5x3'r+16.59755,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.h2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r-16.59755
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.h2+0.16667x4'l-0.16667x3'l+5.66064
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.h2+0.5x4'l+0.5x3'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x3'r-0.11539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x3'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x3'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x3'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.g1,dish_out)..
                                      (x3',dish_in){right}..(x.h1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.g1,dish_out)..(x3',dish_in){
                                                  right}..(x.h1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x3'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.h1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[88]
>> 23.65782
! Division by zero.
<to be read again> 
                   ;
l.716 dy=y1-y2; alpha=((x2l-x1l)++dy)/dy;
                                         
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.725 else: fill z0--
                     diag_end(0,4l,1,1,4r,3r)--z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11580
>> (-x0-87.5189,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-45.65782,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -45.65782
>> (-to_x-45.65782,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-45.65782,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+87.0189
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-87.5189
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.726     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.726     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE9985
>> (x0-41.5189,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 0.5).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-0.34218,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -0.34218
>> (-from_x-0.34218,0.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x-0.34218,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+41.5189,0.5)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 41.5189
>> (-x0+41.5189,0.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+41.5189,0.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-41.5189
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
l.729  prime_points_inside(1,2)
                               ; prime_points_inside(4,3); prime_points_insi...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.729 ...nts_inside(1,2); prime_points_inside(4,3)
                                                  ; prime_points_inside(6,5);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
l.729 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 1).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.729 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r-0.20985
! Unknown relation will be considered false.
<to be read again> 
                   :
l.730  if rt x1'r+cap_jut+.5u+1<=lft x4'l-cap_jut:
                                                   inner_jut=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10905
>> (-0.5x1'l-0.5x1'r-3.06946,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10685
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2-3.06897
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11099
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r+3.06946
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.33334x1'l+0.5x1'r+2.1572
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12041
>> (-0.5x1'l-0.5x1'r-3.06946,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-0.11539
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10829
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2-3.06897
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9979
>> (0.5x1'l+0.5x1'r+3.06946,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r+3.06946
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r+1.63087
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-0.11539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'r+0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.a1,dish_out)..
                                      (x1',dish_in){right}..(x.b1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.a1,dish_out)..(x1',dish_in){
                                                  right}..(x.b1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r+0.38461
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.b1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10054
>> (-0.5x4'l-0.5x4'r-43.1611,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+0.11539
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,2)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-0.5)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11881
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-43.16061
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11532
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+43.1611
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2+0.05x4'l+0.5x4'r+0.15001x1'r+17.44879
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+0.11539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE8491
>> (-0.5x4'l-0.5x4'r-43.1611,0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -2).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,2)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'l,-0.5)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12619
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-43.16159
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12948
>> (0.5x4'l+0.5x4'r+43.1611,-0.5)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -0.5).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+43.1611
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2+0.5x4'l+0.25x4'r+21.41425
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+0.61539
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
<argument> fill.rev_((x.c1,dish_out)..
                                      (x4',dish_in){right}..(x.d1,dish_out)-...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
<argument> ...rev_((x.c1,dish_out)..(x4',dish_in){
                                                  right}..(x.d1,dish_out)--c...

erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'l-0.66524
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> ...',dish_in){right}..(x.d1,dish_out)--
                                                  cycle)
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
dish_serif->...t}..(x(SUFFIX5)1,dish_out)--cycle);
                                                  fi
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[89]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.751 penpos1(alpha*(z_stem-tiny),0)
                                    ; penpos2(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.751 ...-tiny),0); penpos2(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.752 penpos3(alpha*(z_stem-tiny),0)
                                    ; penpos4(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.752 ...-tiny),0); penpos4(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

[90]) (/usr/share/texmf-dist/fonts/source/jknappen/ec/exbraces.mf
 Ok [94]
>> xpart delta-5
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
l.53  filldraw z1l..controls(z1l+delta)and
                                          (z3l-delta)..z3l..z4l
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-30.59998
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
l.53 ...w z1l..controls(z1l+delta)and(z3l-delta)..
                                                  z3l..z4l
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-34
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
l.54   --z4r..controls(z4r-delta)and
                                    (z2r+delta)..z2r..z1r--cycle;  % stroke
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta-8.40002
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
l.54   --z4r..controls(z4r-delta)and(z2r+delta)..
                                                 z2r..z1r--cycle;  % stroke
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[126] [23]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.72 pos1(vair,0); pos2(.75[hair,stem],0)
                                         ; pos3(vair,0);
Maybe Jackowski knows how to change them...

[40]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.83 pos1(vair,0); pos2(.75[hair,stem],0)
                                         ; pos3(vair,0);
Maybe Jackowski knows how to change them...

[41] [60] [124] [62] [91] [93] [92]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(2)> pos(SUFFIX0)(stem,0)
                             ; ENDFOR
l.174 forsuffixes $=2,3,5,6: pos$(stem,0); endfor
                                                 
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(3)> pos(SUFFIX0)(stem,0)
                             ; ENDFOR
l.174 forsuffixes $=2,3,5,6: pos$(stem,0); endfor
                                                 
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(5)> pos(SUFFIX0)(stem,0)
                             ; ENDFOR
l.174 forsuffixes $=2,3,5,6: pos$(stem,0); endfor
                                                 
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(6)> pos(SUFFIX0)(stem,0)
                             ; ENDFOR
l.174 forsuffixes $=2,3,5,6: pos$(stem,0); endfor
                                                 
Maybe Jackowski knows how to change them...

[123]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(2)> pos(SUFFIX0)(stem,0)
                             ; ENDFOR
l.190 forsuffixes $=2,3,5,6: pos$(stem,0); endfor
                                                 
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(3)> pos(SUFFIX0)(stem,0)
                             ; ENDFOR
l.190 forsuffixes $=2,3,5,6: pos$(stem,0); endfor
                                                 
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(5)> pos(SUFFIX0)(stem,0)
                             ; ENDFOR
l.190 forsuffixes $=2,3,5,6: pos$(stem,0); endfor
                                                 
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(6)> pos(SUFFIX0)(stem,0)
                             ; ENDFOR
l.190 forsuffixes $=2,3,5,6: pos$(stem,0); endfor
                                                 
Maybe Jackowski knows how to change them...

[125] [95] [127]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 WNW WSW SSW 6 W
SW WNW NNW NNE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.262 arm(1,2,a,beak_darkness,2beak_jut)
                                        ;  % lower right arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW) SSE 2 (SSW) WSW 3 (WNW NNW) NNE 4 ENE 5 ESE SSE 6 ESE ENE NNE N
NW 0 (WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.264 arm(1,3,b,beak_darkness,-2beak_jut)
                                         ;  % lower left arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[32]) (/usr/share/texmf-dist/fonts/source/jknappen/ec/expunct.mf
 Ok
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.26 ... pos2(if monospace: qvair else: stem fi,0)
                                                  ; pos3(qvair,0);
Maybe Jackowski knows how to change them...

[14]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.45 ... pos2(if monospace: qvair else: stem fi,0)
                                                  ; pos3(qvair,0);
Maybe Jackowski knows how to change them...

[15]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...os2(if.monospace:qvair.else:stem.fi,0)
                                                  ;pos3(qvair,0);rt.x1r=rt.x...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9190)> ...space:qvair.else:stem.fi,0)
                                                  ;pos3(qvair,0);rt.x1r=rt.x...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

[19]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...os2(if.monospace:qvair.else:stem.fi,0)
                                                  ;pos3(qvair,0);lft.x1l=lft...
l.119 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE10352)> ...pace:qvair.else:stem.fi,0)
                                                  ;pos3(qvair,0);lft.x1l=lft...
l.119 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[20]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.126 comma(1,a,pdot_diam,.2u,comma_depth)
                                          ;  % dot and tail
Maybe Jackowski knows how to change them...

[13]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.135 comma(1,a,pdot_diam,.25u,comma_depth)
                                           ; % left dot and tail
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.136 comma(2,b,pdot_diam,.25u,comma_depth)
                                           ; % right dot and tail
Maybe Jackowski knows how to change them...

[18]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.147 pickup fine.nib; pos1(pdot_diam,0)
                                        ; pos2(bot_width,0);
Maybe Jackowski knows how to change them...

> 0 NNE 1 (NNW WNW) WSW 2 (SSW) SSE 3 SSW WSW 4 WNW NNW NNE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.152  filldraw z1r...z0...z1l---z2l--z2r---cycle;
                                                   fi  % stem and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[33]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.163 else: comma(1,a,pdot_diam,.25u,comma_depth)
                                                 ; fi  % comma with increase...
Maybe Jackowski knows how to change them...

[39]
! angle(0,0) is taken as zero.
<for(-90)> ...ic.theta;theta=angle(z[(EXPR0)]-z0);
                                                  fill.z0+0.5(0,-thin_join)r...
l.179 ...(0,thin_join)rotated theta--cycle; endfor
                                                    % diagonal at angle |d|
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! angle(0,0) is taken as zero.
<for(90)> ...ric.theta;theta=angle(z[(EXPR0)]-z0);
                                                  fill.z0+0.5(0,-thin_join)r...
l.179 ...(0,thin_join)rotated theta--cycle; endfor
                                                    % diagonal at angle |d|
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

[42] [43]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.194 comma(1,a,pdot_diam,.2u,comma_depth)
                                          ;  % dot and tail
Maybe Jackowski knows how to change them...

[44]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.200 pos1(pdot_diam,0)
                       ; pos2(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.200 pos1(pdot_diam,0); pos2(pdot_diam,90)
                                           ;
Maybe Jackowski knows how to change them...

[46] [47]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.217 pos1(pdot_diam,0)
                       ; pos2(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.217 pos1(pdot_diam,0); pos2(pdot_diam,90)
                                           ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.219 pos3(pdot_diam,0)
                       ; pos4(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.219 pos3(pdot_diam,0); pos4(pdot_diam,90)
                                           ;
Maybe Jackowski knows how to change them...

[58]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.227 pos1(pdot_diam,0)
                       ; pos2(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.227 pos1(pdot_diam,0); pos2(pdot_diam,90)
                                           ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.230 comma(3,a,pdot_diam,.2u,comma_depth)
                                          ;  % lower dot and tail
Maybe Jackowski knows how to change them...

[59] [61]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

ammoc->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.252 else: ammoc(1,a,pdot_diam,.25u,comma_depth)
                                                 ; fi  % normal ammoc
Maybe Jackowski knows how to change them...

[96]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.264 pickup fine.nib; pos1(pdot_diam,0)
                                        ; pos2(top_width,0);
Maybe Jackowski knows how to change them...

> 0 SSW 1 (SSE ESE) ENE 2 (NNE) NNW 3 NNE ENE 4 ESE SSE SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.269  filldraw z1l...z0...z1r---z2r--z2l---cycle;
                                                   fi  % stem and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[189]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.279 comma(1,a,pdot_diam,.25u,comma_depth)
                                           ; % left dot and tail
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.280 comma(2,b,pdot_diam,.25u,comma_depth)
                                           ; % right dot and tail
Maybe Jackowski knows how to change them...

[17] [45]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

ammoc->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.300 ammoc(1,a,pdot_diam,.25u,comma_depth)
                                           ; % left dot and tail
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

ammoc->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.301 ammoc(2,b,pdot_diam,.25u,comma_depth)
                                           ; % right dot and tail
Maybe Jackowski knows how to change them...

[16] [21] [22]) (/usr/share/texmf-dist/fonts/source/jknappen/ec/exsign.mf
 Ok
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.29 pos2(left_curve,180)
                         ;
Maybe Jackowski knows how to change them...

[24] [34] [35]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.90 pos0(cap_stem,theta)
                         ; pos7(slab,-90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.99  pos10(flare,0)
                    ; pos9(flare,180);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.99  pos10(flare,0); pos9(flare,180)
                                     ;
Maybe Jackowski knows how to change them...

> 0 NNE 1 (NNW WNW) WSW SSW 2 WSW 3 (WNW NNW) NNE ENE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.101 ...se; pos2'(slab,90); z2'=z2; bulb(2',1,10)
                                                  ;  % upper arc and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 SSW 1 (SSE ESE) ENE NNE 2 ENE 3 (ESE SSE) SSW WSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.102  bulb(7,8,9)
                  }};  % lower arc and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[36]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.123 pos1(vair,90); pos2(left_curve,180)
                                         ; pos3(vair,270); pos4(right_curve,...
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.130 pos5(vair,90); pos6(left_curve,180)
                                         ; pos7(vair,270); pos8(right_curve,...
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.141 ...ib; pos9(rule_thickness,angle(z9-z10)+90)
                                                  ;
Maybe Jackowski knows how to change them...

[37]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.152 pos2(fudged.stem,180)
                           ; pos3(vair,270);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.153 pos4(fudged.stem,-180)
                            ; pos5(fudged.stem,-180);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.153 ...fudged.stem,-180); pos5(fudged.stem,-180)
                                                  ;
Maybe Jackowski knows how to change them...

[64]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.180 pos0(flare,0)
                   ; pos1(hair,0); pos2(vair,90); pos3(stem,180);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.180 ...s1(hair,0); pos2(vair,90); pos3(stem,180)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.181 pos4(stem,180)
                    ; pos4'(stem,0); pos5(vair,-90); z4'=z4;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.181 pos4(stem,180); pos4'(stem,0)
                                   ; pos5(vair,-90); z4'=z4;
Maybe Jackowski knows how to change them...

> 0 NNE 1 (NNW WNW) WSW SSW 2 WSW 3 (WNW NNW) NNE ENE ESE 0 (ENE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.184 rt x1r=hround(w-1.5u); bulb(2,1,0)
                                        ;  % bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW) SSE ESE 2 3 ENE NNE 4 NNW WNW WSW SSW SSE ESE 5 ENE NNE NNW WNW
 NNW NNE ENE 6 ESE SSE SSW WSW WNW NNW 7 (NNE) ENE 8 (ESE) SSE ESE ENE NNE NNW 
WNW 9 WSW SSW SSE ESE SSE SSW WSW 10 WNW NNW NNE ENE ESE SSE 11 SSW WSW WNW 12 
WSW 13 SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.192  ..{right}z8e...{up}z9e;
                                % loop and arm
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[191]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.217  pos0(stem,0)
                   ; pos1(hair,0); pos9(hair,-180); pos10(stem,-180);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.217 ...air,0); pos9(hair,-180); pos10(stem,-180)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 NNE 1 (NNW WNW) WSW SSW 2 WSW 3 (WNW NNW) NNE ENE ESE 0 (ENE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.219  bulb(2,1,0)
                  ; bulb(8,9,10);  % bulbs
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 SSW 1 (SSE ESE) ENE NNE 2 ENE 3 (ESE SSE) SSW WSW WNW 0 (WSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.219  bulb(2,1,0); bulb(8,9,10)
                                ;  % bulbs
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[159]) (/usr/share/texmf-dist/fonts/source/jknappen/ec/exromp.mf
 Ok
> 0 ENE 1 2 ESE SSE SSW WSW 3 WNW 4 (NNW NNE) ENE NNE NNW WNW WSW 5 0 (SSW SSE 
ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.31  filldraw stroke z0e---z1e...{left}z2e;
                                              % short diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[38]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.72 pickup fine.nib; pos2(vair,90); pos3(curve,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.79 if serifs: pos1(hair,180); pos0(flare,180)
                                               ;
Maybe Jackowski knows how to change them...

[63]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.93 ... fine.nib; pos2(vair,270); pos3(curve,180)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.100 if serifs: pos1(hair,0); pos0(flare,0)
                                            ;
Maybe Jackowski knows how to change them...

[190]) (/usr/share/texmf-dist/fonts/source/jknappen/ec/exrdigit.mf
 Ok [48] [49]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 WNW WSW SSW 6 W
SW WNW NNW NNE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.65 arm(7,8,a,.3beak_darkness,beak_jut)
                                        ;  % arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.66 ...pos2(slab,90); pos3(.4[curve,cap_curve],0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.69  pos0(bulb_diam,180)
                         ; pos1(cap_hair,180);
Maybe Jackowski knows how to change them...

> 0 WNW 1 (NNW NNE ENE) ESE SSE 2 (ESE) ENE 3 (NNE) NNW WNW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.71 ...2l)=whatever[z1l,z2r]; x2l:=x; bulb(2,1,0)
                                                  ;  % bulb and arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[50]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.97 pos7(cap_curve,0)
                      ; rt x7r=hround(w-.75u); lft x5=min(hround 3u,lft x6)-...
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.109  pos0(bulb_diam1,180)
                           ; pos1(hair,180);
Maybe Jackowski knows how to change them...

> 0 NNE 1 (ENE) ESE SSE 2 (ESE) ENE 3 (NNE) NNW WNW 0 (NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.111  bulb(2,1,0)
                  ;  % upper bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.112  pos10(bulb_diam2,-180)
                             ; pos9(cap_hair,-180);
Maybe Jackowski knows how to change them...

> 0 SSW 1 (SSE ESE) ENE NNE 2 ENE 3 (ESE SSE) SSW WSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.114  bulb(8,9,10)
                   ;  % lower bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[51]
! Square root of -0.9613 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.139 ...ha=diag_ratio(1,diag_stem,y3-y4l,x3r-x4l)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.140 penpos3(alpha*diag_stem,0)
                                ; penpos4(alpha*diag_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.140 ...*diag_stem,0); penpos4(alpha*diag_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

[52]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.169 penpos7(cap_stem-fine,0)
                              ; penpos8(bot_thickness-fine,-90);
Maybe Jackowski knows how to change them...

> 0 SSW 1 WSW 2 (WNW NNW) NNE 3 (NNW) WNW WSW SSW SSE ESE 0 (SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
erase->...fault_wt_:=_;cullit;(TEXT0)withweight._;
                                                  cullit;endgroup
<to be read again> 
                   ;
l.172  ..tension .9 and 1..{x5-x6,3(y5-y6)}cycle;
                                                  % erase excess in middle
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.178  pos10(flare+1/3(cap_stem-stem),-180)
                                           ; bulb(8,9,10);  % bulb
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.187  pos1(flag_breadth,90)
                            ; pos2(flag_breadth,60);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.187 ...1(flag_breadth,90); pos2(flag_breadth,60)
                                                  ;
Maybe Jackowski knows how to change them...

[53]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.219 if serifs: pos1(hair,-360); pos0(flare,-360)
                                                  ;
Maybe Jackowski knows how to change them...

[54]
> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 ESE ENE NNE 6 E
NE ESE SSE SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.241 arm(2,1,a,.3beak_darkness,-beak_jut)
                                          ;  % arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 SSW 2 WSW 3 (WNW NNW) NNE 4 ENE 5 ESE 6 ENE NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.244 arm(2',3,b,beak_darkness,x3r-x.a0)
                                        ;  % upward extension of beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by -2.5).
<to be read again> 
                   ;
l.253 ...r,0); y5=2/3h; z5=whatever[z4,(.75u,y6)];
                                                  
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x5r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<argument> fill.rt.z4r--z4r--z5r--
                                  (rt.x4r,y5)--cycle
erase->...up.interim.default_wt_:=_;cullit;(TEXT0)
                                                  withweight._;cullit;endgroup
<to be read again> 
                   ;
l.254 ...ill rt z4r--z4r--z5r--(rt x4r,y5)--cycle;
                                                    % erase excess at top
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
erase->...fault_wt_:=_;cullit;(TEXT0)withweight._;
                                                  cullit;endgroup
<to be read again> 
                   ;
l.254 ...ill rt z4r--z4r--z5r--(rt x4r,y5)--cycle;
                                                    % erase excess at top
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

>> x5r-12.00049
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(l)> ...SUFFIX0):=z4(SUFFIX0)---z5(SUFFIX0)...
                                                  {down}z6(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.255  filldraw stroke z4e---z5e...{down}z6e;
                                              fi  % stroke
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x5r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(r)> ...SUFFIX0):=z4(SUFFIX0)---z5(SUFFIX0)...
                                                  {down}z6(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.255  filldraw stroke z4e---z5e...{down}z6e;
                                              fi  % stroke
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 ENE 1 2 NNE NNW WNW WSW SSW 3 WSW 4 (WNW NNW) NNE ENE ESE SSE SSW WSW 5 0 (
SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.255  filldraw stroke z4e---z5e...{down}z6e;
                                              fi  % stroke
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[55]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.288 ...y1l=h+o; bot y6r=-o; pos0(cap_stem,theta)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.296  pos7(lower_side,180)
                           ; pos8(upper_side,180);
Maybe Jackowski knows how to change them...

> 0 SSW 1 (SSE ESE) ENE NNE NNW WNW WSW SSW 2 SSE ESE ENE 3 (ESE SSE) SSW 4 (WS
W) WNW NNW 5 NNE ENE ESE SSE SSW WSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.299 ...east tau and atleast 1..{-18u,-.618h}z9e;
                                                   % upper right stroke
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 SSW 1 WSW SSW SSE ESE ENE NNE 2 NNW WNW 3 (WSW) SSW 4 (SSE ESE) ENE ESE SSE
 5 SSW WSW WNW NNW NNE ENE 0 (ESE SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.301 ... atleast tau and atleast 1..{18u,.5h}z9e;
                                                   fi % lower left stroke
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[56]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.328 if serifs: pos1(hair,-180); pos0(flare,-180)
                                                  ;
Maybe Jackowski knows how to change them...

[57]) (/usr/share/texmf-dist/fonts/source/jknappen/ec/expseudo.mf
 Ok) (/usr/share/texmf-dist/fonts/source/jknappen/ec/excspl.mf
 Ok [25] [26] [27] [28] [29] [30] [31] [158])
(/usr/share/texmf-dist/fonts/source/jknappen/ec/exrulett.mf
 Ok
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.28 penpos1(alpha*left_stem,0)
                               ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.28 ...a*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.29 penpos3(alpha*right_stem,0)
                                ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.29 ...right_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

[97] [98]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.81  pickup fine.nib; pos1(cap_hair,0)
                                       ; pos2(cap_band,90);
Maybe Jackowski knows how to change them...

>> -x2l'-51.54832
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-51.54832)> if(EXPR0)<u_:
                              u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.87 ...=whatever[z2r,z1l]; x2l:=min(x2l',x2l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4l'-51.54832
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-51.54832)> if(EXPR0)<u_:
                              u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.88 ...=whatever[z4r,z5l]; x4l:=min(x4l',x4l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-6.23813
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x4l'-6.23813
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...2)l}...{z(SUFFIX3)l-corner}
                                                  z(SUFFIX3)l.endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.90 ..._arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.91  pos6(.3[fine.breadth,cap_hair],0)
                                       ; x6r=x1r; top y6=h+o;
Maybe Jackowski knows how to change them...

[99] [100] [101] [102]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.185  else: pos5(cap_hair,0)
                             ; pos8(cap_stem,0);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.188  pos1(cap_hair,0)
                       ; pos2(cap_band,90);
Maybe Jackowski knows how to change them...

>> -x2l'-51.55383
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-51.55383)> if(EXPR0)<u_:
                              u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.193 ...whatever[z2r,z1l]; x2l:=min(x2l',x2l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.196 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.196 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-6.23813
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.196 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.196 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.197  pos6(.3[fine.breadth,cap_hair],0)
                                        ; x6r=x1r; top y6=h+o;
Maybe Jackowski knows how to change them...

[103] [104] [105] [106]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.309 penpos3(alpha1*(stem1-tiny),0)
                                    ; penpos4(whatever,-90);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.311 penpos6(alpha2*(stem2-tiny),0)
                                    ;
Maybe Jackowski knows how to change them...

[107] [108] [109] [110] [111] [112] [113] [114]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.534 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.539  pos10(.3[fine.breadth,cap_hair],0)
                                         ; pos9(.3[fine.breadth,cap_hair],0);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.539 ...ir],0); pos9(.3[fine.breadth,cap_hair],0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (SSW) SSE 2 (SSW) WSW 3 (WNW NNW) NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.543 ...--z10l--subpath(t,0) of upper_arc--cycle;
                                                    % upper barb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[115] [116] [117]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.600 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.600 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.601 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.601 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

[118]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.631 penpos1(alpha*stem1,0)
                            ; penpos2(alpha*stem1,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.631 ...s1(alpha*stem1,0); penpos2(alpha*stem1,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.632 penpos3(alpha*stem2,0)
                            ; penpos4(alpha*stem2,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.632 ...s3(alpha*stem2,0); penpos4(alpha*stem2,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.633 penpos5(alpha*stem3,0)
                            ; penpos6(alpha*stem3,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.633 ...s5(alpha*stem3,0); penpos6(alpha*stem3,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.634 penpos7(alpha*stem4,0)
                            ; penpos8(alpha*stem4,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.634 ...s7(alpha*stem4,0); penpos8(alpha*stem4,0)
                                                  ;
Maybe Jackowski knows how to change them...

[119]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.678 penpos1(alpha1*stem1,0)
                             ; penpos2(alpha2*stem2,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.678 ...(alpha1*stem1,0); penpos2(alpha2*stem2,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.679 penpos3(alpha2*stem2,0)
                             ; penpos4(alpha1*stem1,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.679 ...(alpha2*stem2,0); penpos4(alpha1*stem1,0)
                                                  ;
Maybe Jackowski knows how to change them...

[120]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.717 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.717 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.718 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.718 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 2 3 WNW NNW NNE ENE 4 5 NNE 6 NNW WNW 7 WSW 8 SSW 9 10 (SSE) ESE 11 S
SE SSW WSW 12 13 WNW 14 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.727     --diag_end(2l,1l,1,1,1r,0)--cycle;
                                             fi  % diagonals and stem
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[121]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.751 penpos1(alpha*(z_stem-tiny),0)
                                    ; penpos2(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.751 ...-tiny),0); penpos2(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.752 penpos3(alpha*(z_stem-tiny),0)
                                    ; penpos4(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.752 ...-tiny),0); penpos4(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

[122]) (/usr/share/texmf-dist/fonts/source/jknappen/ec/exruwest.mf
 Ok
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...-apex_corr);penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ft_stem,0);penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ....serifs:0.75u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9458)> ...;penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9458)> ...;penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9458)> ...penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9458)> ...penpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9458)> ...5u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
Maybe Jackowski knows how to change them...

[224]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...-apex_corr);penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ft_stem,0);penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...nospace:hpos_corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...nospace:hpos_corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE1377)> ...;penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE1377)> ...;penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE1377)> ...penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE1377)> ...penpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE1377)> ...s_corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE1377)> ...s_corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[225]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.136 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.136 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.137 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.137 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

[226]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.169 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.169 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.170 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.170 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

>> xpart delta-21
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-64.79999
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-69
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta-25.20001
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[227]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.202 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.202 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.203 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.203 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

[228]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.234 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.234 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.235 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.235 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.254 uppercase_circle(x2,y2,12,13,14,15)
                                         ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.254 uppercase_circle(x2,y2,12,13,14,15)
                                         ;
Maybe Jackowski knows how to change them...

[229]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.285 penpos11(alpha*left_stem,0)
                                 ; penpos12(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.285 ...left_stem,0); penpos12(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

[230]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.307  pickup fine.nib; pos1(cap_hair,0)
                                        ; pos2(cap_band,90);
Maybe Jackowski knows how to change them...

>> -x2l'-51.54832
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-51.54832)> if(EXPR0)<u_:
                              u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.313 ...whatever[z2r,z1l]; x2l:=min(x2l',x2l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4l'-51.54832
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-51.54832)> if(EXPR0)<u_:
                              u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.314 ...whatever[z4r,z5l]; x4l:=min(x4l',x4l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-6.23813
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x4l'-6.23813
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...2)l}...{z(SUFFIX3)l-corner}
                                                  z(SUFFIX3)l.endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.316 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.317  pos6(.3[fine.breadth,cap_hair],0)
                                        ; x6r=x1r; top y6=h+o;
Maybe Jackowski knows how to change them...

[231]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...t(0,0.5ic#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10043)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[232]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ap_jut,d,1/3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ap_jut,d,1/3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9476)> ...3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9476)> ...3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[233] [234] [235]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...it(0,0.5ic#);hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11824)> ...;hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[236]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ce:hpos_corr=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ce:hpos_corr=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13648)> ...=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE13648)> ...=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[237] [238] [239] [240]
>> xpart delta-20
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-64.79999
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-69
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta-24.20001
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[241]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,ic#-0.5u#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12092)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[242]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...s(1,2,3,4);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...s(1,2,3,4);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11364)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11364)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[243] [244]
>> xpart delta-24
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-67.79999
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-72
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta-28.20001
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[245] [246] [247] [248]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...#-0.5u#,0));hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13745)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[249]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...jut,d,1/2,cap_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...jut,d,1/2,cap_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13767)> ...p_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE13767)> ...p_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[250] [251] [252]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...1l)++dy)/dy;penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ft_stem,0);penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;penpos5(left_stem,0);penp...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...3,cap_jut,f,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...3,cap_jut,f,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12798)> ...penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12798)> ...penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12798)> ...enpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12798)> ...enpos4(alpha*right_stem,0)
                                                  ;penpos5(left_stem,0);penp...
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 2 3 WNW NNW NNE ENE 4 5 NNE 6 NNW WNW 7 WSW 8 SSW 9 10 (SSE) ESE 11 S
SE SSW WSW 12 13 WNW 14 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE12798)> ...nd(2l,1l,1,1,1r,0)--cycle;
                                                  fi.if.serifs:numeric.inner...
l.916 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12798)> ...1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12798)> ...1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[253] [254]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.970 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.975  pos10(.3[fine.breadth,cap_hair],0)
                                         ; pos9(.3[fine.breadth,cap_hair],0);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.975 ...ir],0); pos9(.3[fine.breadth,cap_hair],0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (SSW) SSE 2 (SSW) WSW 3 (WNW NNW) NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.979 ...--z10l--subpath(t,0) of upper_arc--cycle;
                                                    % upper barb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[255]) (/usr/share/texmf-dist/fonts/source/jknappen/ec/exrueast.mf
 Ok
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.67 penpos1(alpha*left_stem,0)
                               ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.67 ...a*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.68 penpos3(alpha*right_stem,0)
                                ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.68 ...right_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_breve->...os[(EXPR5)](mid_thickness,-90)
                                                  ;bot.y[(EXPR5)]r=cap_heigh...
l.87 uppercase_breve(x2,0,12,13,14)
                                   ;
Maybe Jackowski knows how to change them...

[160]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.101  penpos1(alpha*left_stem,0)
                                 ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.101 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.102  penpos3(alpha*right_stem,0)
                                  ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.102 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );y_right':=ypart(bot(dire...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );if.abs(x_down'-x_down,y_...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

ERROR: `ogonek' iteration hasn't converged! Final values:
x_down=-76.36311 (should be -70)
y_right=-0.00024 (should be -3)
! Probably, you have to change somehow the boundary values.
<to be read again> 
                   ;
put_ogonek->...hange somehow the boundary values";
                                                  fi.z[ii]l=z_a;z[ii]'l=lo.z...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

>> -1.94397
! Division by zero.
<to be read again> 
                   )
lo->...aled.sqrt(body_height#/higher.body_height#)
                                                  )else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...lues";fi.z[ii]l=z_a;z[ii]'l=lo.z_b;
                                                  z[jj]'l=lo.z_c;z[jj]l=lo.z...
l.128  put_ogonek(the_pen)
                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.94397 has been replaced by 0.
lo->...led.sqrt(body_height#/higher.body_height#))
                                                  else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...lues";fi.z[ii]l=z_a;z[ii]'l=lo.z_b;
                                                  z[jj]'l=lo.z_c;z[jj]l=lo.z...
l.128  put_ogonek(the_pen)
                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -1.94397
! Division by zero.
<to be read again> 
                   )
lo->...aled.sqrt(body_height#/higher.body_height#)
                                                  )else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...=z_a;z[ii]'l=lo.z_b;z[jj]'l=lo.z_c;
                                                  z[jj]l=lo.z_d;pos[ii](max(...
l.128  put_ogonek(the_pen)
                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.94397 has been replaced by 0.
lo->...led.sqrt(body_height#/higher.body_height#))
                                                  else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...=z_a;z[ii]'l=lo.z_b;z[jj]'l=lo.z_c;
                                                  z[jj]l=lo.z_d;pos[ii](max(...
l.128  put_ogonek(the_pen)
                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -1.94397
! Division by zero.
<to be read again> 
                   )
lo->...aled.sqrt(body_height#/higher.body_height#)
                                                  )else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...o.z_b;z[jj]'l=lo.z_c;z[jj]l=lo.z_d;
                                                  pos[ii](max(the_top_breadt...
l.128  put_ogonek(the_pen)
                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.94397 has been replaced by 0.
lo->...led.sqrt(body_height#/higher.body_height#))
                                                  else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...o.z_b;z[jj]'l=lo.z_c;z[jj]l=lo.z_d;
                                                  pos[ii](max(the_top_breadt...
l.128  put_ogonek(the_pen)
                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

[161]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...(0,0);pickup.fine.nib;pos1(cap_hair,0)
                                                  ;pos2(cap_band,90);pos3(ca...
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...;pos2(cap_band,90);pos3(cap_curve,180)
                                                  ;pos4(cap_band,270);pos5(h...
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

>> -x2l'-220.47987
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-220.47987)> if(EXPR0)<u_:
                               u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
<for(1)> ...tever[z2r,z1l];x2l:=min(x2l',x2l+0.5u)
                                                  ;(x4l',y4l)=whatever[z4r,z...
l.153  repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4l'-220.47987
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-220.47987)> if(EXPR0)<u_:
                               u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
<for(1)> ...tever[z4r,z5l];x4l:=min(x4l',x4l+0.5u)
                                                  ;filldraw.stroke.z1e{x2-x1...
l.153  repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(1)> ...rc.e(2,3)&pulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-24.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(1)> ...rc.e(2,3)&pulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-27.13593
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(1)> ...rc.e(2,3)&pulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-24.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(1)> ...rc.e(2,3)&pulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x4l'-27.13593
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(1)> ...rc.e(2,3)&pulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+24.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(1)> ...rc.e(2,3)&pulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+24.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...2)l}...{z(SUFFIX3)l-corner}
                                                  z(SUFFIX3)l.endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(1)> ...rc.e(2,3)&pulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(1)> ...rc.e(2,3)&pulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...z5e;pos6(0.3[fine.breadth,cap_hair],0)
                                                  ;x6r=x1r;top.y6=h+o;x1r-x1...
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...e;penlabels(1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...e;penlabels(1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9814)> ...p.fine.nib;pos1(cap_hair,0)
                                                  ;pos2(cap_band,90);pos3(ca...
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

>> -x2l'-51.54832
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-51.54832)> if(EXPR0)<u_:
                              u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
<for(%CAPSULE9814)> ...1l];x2l:=min(x2l',x2l+0.5u)
                                                  ;(x4l',y4l)=whatever[z4r,z...
l.153  repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4l'-51.54832
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-51.54832)> if(EXPR0)<u_:
                              u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
<for(%CAPSULE9814)> ...5l];x4l:=min(x4l',x4l+0.5u)
                                                  ;filldraw.stroke.z1e{x2-x1...
l.153  repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE9814)> ...ulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE9814)> ...ulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-6.23813
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE9814)> ...ulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE9814)> ...ulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x4l'-6.23813
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE9814)> ...ulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE9814)> ...ulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...2)l}...{z(SUFFIX3)l-corner}
                                                  z(SUFFIX3)l.endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE9814)> ...ulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE9814)> ...ulled_arc.e(3,4)...{up}z5e;
                                                  pos6(0.3[fine.breadth,cap_...
l.153  repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9814)> ...3[fine.breadth,cap_hair],0)
                                                  ;x6r=x1r;top.y6=h+o;x1r-x1...
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9814)> ...(1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9814)> ...(1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

[162]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.175  pickup fine.nib; pos1(cap_hair,0)
                                        ; pos2(cap_band,90);
Maybe Jackowski knows how to change them...

>> -x2l'-51.54832
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-51.54832)> if(EXPR0)<u_:
                              u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.181 ...whatever[z2r,z1l]; x2l:=min(x2l',x2l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4l'-51.54832
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-51.54832)> if(EXPR0)<u_:
                              u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.182 ...whatever[z4r,z5l]; x4l:=min(x4l',x4l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-6.23813
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x4l'-6.23813
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'+5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...2)l}...{z(SUFFIX3)l-corner}
                                                  z(SUFFIX3)l.endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...SUFFIX0)(2,3)&pulled_arc(SUFFIX0)(3,4)
                                                  ...{up}z5(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.184 ...arc.e(2,3) & pulled_arc.e(3,4)...{up}z5e;
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.185  pos6(.3[fine.breadth,cap_hair],0)
                                        ; x6r=x1r; top y6=cap_height+o;
Maybe Jackowski knows how to change them...

>> x2l'+0.5
! Not implemented: floor(unknown numeric).
<to be read again> 
                   endgroup
<to be read again> 
                   -
good.x->begingroup.hround((EXPR2)+pen_lft)-
                                           pen_lft.endgroup
<to be read again> 
                   ;
uc_hachek_accent->...curve],90);x52=good.x(EXPR0);
                                                  x52-x51=x53-x52=good.x3acc...
l.203 uc_hachek_accent(x2l)
                           ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> x2l'+36.3688
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(l)> path_(SUFFIX0):=z51(SUFFIX0)--
                                       z52(SUFFIX0)--z53(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
uc_hachek_accent->...draw.stroke.z51e--z52e--z53e;
                                                  else:pickup.fine.nib;pos51...
l.203 uc_hachek_accent(x2l)
                           ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2l'+0.5
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(l)> ...SUFFIX0):=z51(SUFFIX0)--z52(SUFFIX0)--
                                                  z53(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
uc_hachek_accent->...draw.stroke.z51e--z52e--z53e;
                                                  else:pickup.fine.nib;pos51...
l.203 uc_hachek_accent(x2l)
                           ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2l'-35.3688
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ;
<for(l)> ...(SUFFIX0)--z52(SUFFIX0)--z53(SUFFIX0);
                                                   ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
uc_hachek_accent->...draw.stroke.z51e--z52e--z53e;
                                                  else:pickup.fine.nib;pos51...
l.203 uc_hachek_accent(x2l)
                           ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2l'+26.63118
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(r)> path_(SUFFIX0):=z51(SUFFIX0)--
                                       z52(SUFFIX0)--z53(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
uc_hachek_accent->...draw.stroke.z51e--z52e--z53e;
                                                  else:pickup.fine.nib;pos51...
l.203 uc_hachek_accent(x2l)
                           ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2l'+0.5
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(r)> ...SUFFIX0):=z51(SUFFIX0)--z52(SUFFIX0)--
                                                  z53(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
uc_hachek_accent->...draw.stroke.z51e--z52e--z53e;
                                                  else:pickup.fine.nib;pos51...
l.203 uc_hachek_accent(x2l)
                           ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2l'-25.63118
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ;
<for(r)> ...(SUFFIX0)--z52(SUFFIX0)--z53(SUFFIX0);
                                                   ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
uc_hachek_accent->...draw.stroke.z51e--z52e--z53e;
                                                  else:pickup.fine.nib;pos51...
l.203 uc_hachek_accent(x2l)
                           ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[163] [164] [165]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );y_right':=ypart(bot(dire...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );if.abs(x_down'-x_down,y_...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

ERROR: `ogonek' iteration hasn't converged! Final values:
x_down=-63.36311 (should be -57)
y_right=-0.00024 (should be -3)
! Probably, you have to change somehow the boundary values.
<to be read again> 
                   ;
put_ogonek->...hange somehow the boundary values";
                                                  fi.z[ii]l=z_a;z[ii]'l=lo.z...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

>> -1.94397
! Division by zero.
<to be read again> 
                   )
lo->...aled.sqrt(body_height#/higher.body_height#)
                                                  )else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...lues";fi.z[ii]l=z_a;z[ii]'l=lo.z_b;
                                                  z[jj]'l=lo.z_c;z[jj]l=lo.z...
l.291  put_ogonek(the_pen)
                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.94397 has been replaced by 0.
lo->...led.sqrt(body_height#/higher.body_height#))
                                                  else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...lues";fi.z[ii]l=z_a;z[ii]'l=lo.z_b;
                                                  z[jj]'l=lo.z_c;z[jj]l=lo.z...
l.291  put_ogonek(the_pen)
                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -1.94397
! Division by zero.
<to be read again> 
                   )
lo->...aled.sqrt(body_height#/higher.body_height#)
                                                  )else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...=z_a;z[ii]'l=lo.z_b;z[jj]'l=lo.z_c;
                                                  z[jj]l=lo.z_d;pos[ii](max(...
l.291  put_ogonek(the_pen)
                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.94397 has been replaced by 0.
lo->...led.sqrt(body_height#/higher.body_height#))
                                                  else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...=z_a;z[ii]'l=lo.z_b;z[jj]'l=lo.z_c;
                                                  z[jj]l=lo.z_d;pos[ii](max(...
l.291  put_ogonek(the_pen)
                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -1.94397
! Division by zero.
<to be read again> 
                   )
lo->...aled.sqrt(body_height#/higher.body_height#)
                                                  )else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...o.z_b;z[jj]'l=lo.z_c;z[jj]l=lo.z_d;
                                                  pos[ii](max(the_top_breadt...
l.291  put_ogonek(the_pen)
                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1.94397 has been replaced by 0.
lo->...led.sqrt(body_height#/higher.body_height#))
                                                  else:(SUFFIX2)fi.endgroup
<to be read again> 
                   ;
put_ogonek->...o.z_b;z[jj]'l=lo.z_c;z[jj]l=lo.z_d;
                                                  pos[ii](max(the_top_breadt...
l.291  put_ogonek(the_pen)
                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

[166]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.302  else: pos5(cap_hair,0)
                             ; pos8(cap_stem,0);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.305  pos1(cap_hair,0)
                       ; pos2(cap_band,90);
Maybe Jackowski knows how to change them...

>> -x2l'-51.55383
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(-51.55383)> if(EXPR0)<u_:
                              u_:=(EXPR0);fi ENDFOR
min->...);for.uu=(TEXT3):if.uu<u_:u_:=uu;fi.endfor
                                                  .u_.endgroup
l.310 ...whatever[z2r,z1l]; x2l:=min(x2l',x2l+.5u)
                                                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> x2l'
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...SUFFIX2)r)];fi.z(SUFFIX2)l{
                                                  corner-z(SUFFIX2)l}...(EXP...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.313 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...FFIX2)l{corner-z(SUFFIX2)l}
                                                  ...(EXPR4)[superness[cente...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.313 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.24408x2l'-6.23813
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
pulled_super_arc.l->...enter,corner],outer_point]{
                                                  z(SUFFIX3)l-z(SUFFIX2)l}.....

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.313 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x2l'-5.49951
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
pulled_super_arc.l->...t]{z(SUFFIX3)l-z(SUFFIX2)l}
                                                  ...{z(SUFFIX3)l-corner}z(S...

pulled_arc->...X2)((SUFFIX3),(SUFFIX4))(superpull)
                                                  endgroup
<for(l)> ...,10(y2-y1)}...pulled_arc(SUFFIX0)(2,3)
                                                  &pulled_arc(SUFFIX0)(3,4)....

stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.313 ...arc.e(2,3) & pulled_arc.e(3,4)...z5e{up};
                                                   % arc
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.314  pos6(.3[fine.breadth,cap_hair],0)
                                        ; x6r=x1r; top y6=cap_height+o;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_breve->...os[(EXPR5)](mid_thickness,-90)
                                                  ;bot.y[(EXPR5)]r=cap_heigh...
l.341 uppercase_breve(x2,0,10,11,12)
                                    ;
Maybe Jackowski knows how to change them...

[167]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ound.max(2u,3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ound.max(2u,3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9957)> ...,3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9957)> ...,3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[168]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...

dtl_hachek->...t_diam,0.25accent_u,2/3comma_depth)
                                                  ;penlabels(51);
l.375 dtl_hachek(x4-pdot_diam)(y1+.5pdot_diam)
                                              ;
Maybe Jackowski knows how to change them...

[169] [170]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,4',5,6,7);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,4',5,6,7);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13633)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE13633)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[171] [172] [173]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...accent;else:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...accent;else:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...u;put_accent;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...u;put_accent;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9285)> ...:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9285)> ...:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9285)> ...t;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9285)> ...t;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[174]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...--cycle;fi.hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...--cycle;fi.hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10314)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10314)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[175] [176]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...z8;pos10(0.3[fine.breadth,cap_hair],0)
                                                  ;pos9(0.3[fine.breadth,cap...
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...,0);pos9(0.3[fine.breadth,cap_hair],0)
                                                  ;x10r=x1l;top.y10=top.y2l;...
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...6,7,8,8',9,10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...6,7,8,8',9,10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE9929)> ...x1,10(y2-y1)}....{left}z2e;
                                                  filldraw.stroke.z7e{left}....
l.625 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9929)> ...3[fine.breadth,cap_hair],0)
                                                  ;pos9(0.3[fine.breadth,cap...
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9929)> ...3[fine.breadth,cap_hair],0)
                                                  ;x10r=x1l;top.y10=top.y2l;...
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (SSW) SSE 2 (SSW) WSW 3 (WNW NNW) NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE9929)> ...th(t,0)of.upper_arc--cycle;
                                                  t:=xpart(lower_arc.interse...
l.625 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9929)> ...10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9929)> ...10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[177]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.649 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.654  pos10(.3[fine.breadth,cap_hair],0)
                                         ; pos9(.3[fine.breadth,cap_hair],0);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.654 ...ir],0); pos9(.3[fine.breadth,cap_hair],0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (SSW) SSE 2 (SSW) WSW 3 (WNW NNW) NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.658 ...--z10l--subpath(t,0) of upper_arc--cycle;
                                                    % upper barb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[178]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.691 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.696  pos10(.3[fine.breadth,cap_hair],0)
                                         ; pos9(.3[fine.breadth,cap_hair],0);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.696 ...ir],0); pos9(.3[fine.breadth,cap_hair],0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (SSW) SSE 2 (SSW) WSW 3 (WNW NNW) NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.700 ...--z10l--subpath(t,0) of upper_arc--cycle;
                                                    % upper barb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[179] [180] [181]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...accent;else:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...accent;else:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...u;put_accent;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...u;put_accent;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11628)> ...hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11628)> ...hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11628)> ...;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11628)> ...;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[182]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.802 ...ght+if hefty: .5 fi accent_gap,8,9,10,11)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.802 ...ght+if hefty: .5 fi accent_gap,8,9,10,11)
                                                  ;
Maybe Jackowski knows how to change them...

[183]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.817 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.817 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.818 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.818 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 2 3 WNW NNW NNE ENE 4 5 NNE 6 NNW WNW 7 WSW 8 SSW 9 10 (SSE) ESE 11 S
SE SSW WSW 12 13 WNW 14 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.827     --diag_end(2l,1l,1,1,1r,0)--cycle;
                                             fi  % diagonals and stem
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[184]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...2r-x3l);penpos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,4,5,6,7,8);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,4,5,6,7,8);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11312)> ...os1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11312)> ...os2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11312)> ...os3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11312)> ...os4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11312)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11312)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[185]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.883 penpos1(alpha*(z_stem-tiny),0)
                                    ; penpos2(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.883 ...-tiny),0); penpos2(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.884 penpos3(alpha*(z_stem-tiny),0)
                                    ; penpos4(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.884 ...-tiny),0); penpos4(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

[186]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...2r-x3l);penpos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

put_dot->...ppp);pickup(SUFFIX0)nib;pos[jj](dd,90)
                                                  ;pos[ii](dd,0);x[jj]=x[ii]...
<for(1)> ...ut_dot(tiny,max(dot_size#,cap_curve#))
                                                  ; ENDFOR
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

put_dot->...FFIX0)nib;pos[jj](dd,90);pos[ii](dd,0)
                                                  ;x[jj]=x[ii]=good.x(0.5w+i...
<for(1)> ...ut_dot(tiny,max(dot_size#,cap_curve#))
                                                  ; ENDFOR
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9794)> ...pos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9794)> ...pos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9794)> ...pos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9794)> ...pos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[187] [188]) (/usr/share/texmf-dist/fonts/source/jknappen/ec/txpseudo.mf
 Ok) (/usr/share/texmf-dist/fonts/source/jknappen/ec/txaccent.mf
 Ok
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ..._beginchar;;adjust_fit(0,0);put_gravis
                                                  ; ENDFOR
l.34 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13025)> ...adjust_fit(0,0);put_gravis
                                                  ; ENDFOR
l.34 repeat_once
                ;
Maybe Jackowski knows how to change them...

[0]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...fs:1.5fi.u#;adjust_fit(0,0);put_accent
                                                  ; ENDFOR
l.43 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...fs:1.5fi.u#;adjust_fit(0,0);put_accent
                                                  ; ENDFOR
l.43 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11168)> ...adjust_fit(0,0);put_accent
                                                  ; ENDFOR
l.43 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11168)> ...adjust_fit(0,0);put_accent
                                                  ; ENDFOR
l.43 repeat_once
                ;
Maybe Jackowski knows how to change them...

[1] [2]
>> xpart delta-7
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.59 uppercase_tilde(0,0,1,2,3,4,5)
                                   ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-50.79999
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.59 uppercase_tilde(0,0,1,2,3,4,5)
                                   ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-55
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.59 uppercase_tilde(0,0,1,2,3,4,5)
                                   ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta-11.20001
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.59 uppercase_tilde(0,0,1,2,3,4,5)
                                   ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[3] [4]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...accent;else:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...accent;else:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...u;put_accent;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...u;put_accent;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9271)> ...:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9271)> ...:hpos_corr=-1.5u;put_accent
                                                  ;hpos_corr=1.5u;put_accent...
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9271)> ...t;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9271)> ...t;hpos_corr=1.5u;put_accent
                                                  ;fi ENDFOR
l.75 repeat_once
                ;
Maybe Jackowski knows how to change them...

[5]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.82 uppercase_circle(.5w,y[-1],1,2,3,4)
                                        ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.82 uppercase_circle(.5w,y[-1],1,2,3,4)
                                        ;
Maybe Jackowski knows how to change them...

[6] [7]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_breve->...os[(EXPR5)](mid_thickness,-90)
                                                  ;bot.y[(EXPR5)]r=cap_heigh...
l.95 uppercase_breve(.5w,0,1,2,3)
                                 ;
Maybe Jackowski knows how to change them...

[8] [9]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

put_dot->...ppp);pickup(SUFFIX0)nib;pos[jj](dd,90)
                                                  ;pos[ii](dd,0);x[jj]=x[ii]...
<for(1)> ...ut_dot(tiny,max(dot_size#,cap_curve#))
                                                  ; ENDFOR
l.114 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

put_dot->...FFIX0)nib;pos[jj](dd,90);pos[ii](dd,0)
                                                  ;x[jj]=x[ii]=good.x(0.5w+i...
<for(1)> ...ut_dot(tiny,max(dot_size#,cap_curve#))
                                                  ; ENDFOR
l.114 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[10] [11] [12]) (/usr/share/texmf-dist/fonts/source/jknappen/ec/excligtb.mf
 Ok) ) ) ) 
Here is how much of METAFONT's memory you used:
 775 strings out of 5263
 8639 string characters out of 69836
 42822 words of memory out of 5000000
 1538 symbolic tokens out of 9500
 13i,79n,0r,23p,259b stack positions out of 300i,300n,1000r,150p,200000b
 
(You used 81w,14h,4d,43i,293l,7k,0e,16p metric file positions
  out of 256w,16h,16d,64i,15000l,2500k,256e,60p)

Font metrics written on ecxc0.tfm.
Output written on ecxc0.600gf (256 characters, 33280 bytes).
